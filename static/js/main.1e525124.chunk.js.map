{"version":3,"sources":["components/Canvas.js","redux/actions.js","redux/actionTypes.js","constants.js","render.js","components/UndoButton.js","components/RedoButton.js","App.js","redux/opReducer.js","redux/store.js","index.js"],"names":["connect","state","history","dispatch","type","strokeStyle","useState","mouseDown","setState","handleEventAs","event","x","y","payload","opCreate","pageX","refCanvas","current","offsetLeft","pageY","offsetTop","Error","handleEvent","useRef","useEffect","width","parseInt","getComputedStyle","parentNode","getPropertyValue","height","resize","ctx","getContext","op","x1","y1","fillStyle","slice","reverse","x2","y2","beginPath","fillRect","stroke","moveTo","lineTo","render","ref","onMouseUp","onMouseMove","onMouseDown","className","Button","variant","disabled","length","onClick","future","useStyles","makeStyles","theme","title","flexGrow","menuButton","marginRight","spacing","content","overflow","container","paddingTop","paddingBottom","canvas","classes","AppBar","position","Toolbar","Typography","color","RedoButton","Container","Card","raised","reduce","action","concat","last","rest","store","configureStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e525124.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { opCreate, opUpdate } from \"./../redux/actions\";\nimport { render } from \"./../render\";\nimport { OP_TYPE_RECT, OP_TYPE_GESTURE } from \"./../constants\";\n\nfunction resize(refCanvas) {\n  refCanvas.current.width = parseInt(\n    getComputedStyle(refCanvas.current.parentNode).getPropertyValue(\"width\")\n  );\n  refCanvas.current.height = parseInt(\n    getComputedStyle(refCanvas.current.parentNode).getPropertyValue(\"height\")\n  );\n}\n\nfunction Canvas({ history, dispatch, type, strokeStyle }) {\n  const [state, setState] = useState({ mouseDown: false }),\n    handleEventAs = (type, strokeStyle, event) => {\n      switch (event.type) {\n        case \"mousedown\":\n          setState({ mouseDown: true });\n\n          return dispatch(\n            opCreate(\n              type,\n              strokeStyle,\n              event.pageX - refCanvas.current.offsetLeft,\n              event.pageY - refCanvas.current.offsetTop\n            )\n          );\n        case \"mousemove\":\n          if (state.mouseDown) {\n            return dispatch(\n              opUpdate(\n                event.pageX - refCanvas.current.offsetLeft,\n                event.pageY - refCanvas.current.offsetTop\n              )\n            );\n          }\n          return;\n        case \"mouseup\":\n          return setState({ mouseDown: false });\n        default:\n          throw new Error(\"unknown event.type: \", event.type);\n      }\n    },\n    handleEvent = (event) => {\n      switch (type) {\n        case OP_TYPE_GESTURE:\n          return handleEventAs(type, strokeStyle, event);\n        case OP_TYPE_RECT:\n          return handleEventAs(type, strokeStyle, event);\n        default:\n          throw new Error(\"unknown op.type: \", type);\n      }\n    };\n\n  let refCanvas = useRef(null);\n\n  useEffect(() => {\n    resize(refCanvas);\n  });\n\n  useEffect(() => {\n    render(refCanvas, history);\n  });\n\n  return (\n    <canvas\n      ref={refCanvas}\n      onMouseUp={handleEvent}\n      onMouseMove={handleEvent}\n      onMouseDown={handleEvent}\n    ></canvas>\n  );\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, null)(Canvas);\n","import { OP_CREATE, OP_UPDATE, UNDO, REDO, OP_SET_TYPE } from \"./actionTypes\";\n\nexport const setType = (type) => ({\n  type: OP_SET_TYPE,\n  payload: { type },\n});\n\nexport const opCreate = (type, strokeStyle, x, y) => ({\n  type: OP_CREATE,\n  payload: { type, strokeStyle, x, y },\n});\n\nexport const opUpdate = (x, y) => ({\n  type: OP_UPDATE,\n  payload: { x, y },\n});\n\nexport const undo = () => ({\n  type: UNDO,\n  payload: {},\n});\n\nexport const redo = () => ({\n  type: REDO,\n  payload: {},\n});\n","export const OP_SET_TYPE = \"op/setType\";\nexport const OP_CREATE = \"op/create\";\nexport const OP_UPDATE = \"op/update\";\nexport const UNDO = \"undo\";\nexport const REDO = \"redo\";\n","export const OP_TYPE_GESTURE = \"gesture\";\nexport const OP_TYPE_RECT = \"rect\";\nexport const OP_TYPE_DEFAULT = OP_TYPE_GESTURE;\nexport const OP_STROKE_STYLE_DEFAULT = \"#333\";\n","import { OP_TYPE_RECT, OP_TYPE_GESTURE } from \"./constants\";\n\nexport const render = (refCanvas, history) => {\n  // eslint-disable-next-line\n  refCanvas.current.width = refCanvas.current.width;\n\n  const ctx = refCanvas.current.getContext(\"2d\");\n\n  for (const op of history) {\n    const { type, strokeStyle, x: x1, y: y1 } = op[0];\n\n    ctx.strokeStyle = strokeStyle;\n    ctx.fillStyle = strokeStyle;\n\n    switch (type) {\n      case OP_TYPE_RECT:\n        const [{ x: x2, y: y2 }, ...rest] = op.slice().reverse();\n        ctx.beginPath();\n        ctx.fillRect(x1, y1, (x1 - x2) * -1, (y1 - y2) * -1);\n        ctx.stroke();\n        break;\n      case OP_TYPE_GESTURE:\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        for (const { x: x2, y: y2 } of op) {\n          ctx.lineTo(x2, y2);\n          ctx.stroke();\n        }\n        break;\n      default:\n        throw new Error(\"unknown op: \", op);\n    }\n  }\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { undo } from \"./../redux/actions\";\n\nfunction UndoButton({ history, dispatch, className }) {\n  return (\n    <Button\n      variant=\"contained\"\n      className={className}\n      disabled={history.length === 0}\n      onClick={() => {\n        dispatch(undo());\n      }}\n    >\n      Undo\n    </Button>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history,\n});\n\nexport default connect(mapStateToProps, null)(UndoButton);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { redo } from \"./../redux/actions\";\n\nfunction UndoButton({ future, dispatch, className }) {\n  return (\n    <Button\n      variant=\"contained\"\n      className={className}\n      disabled={future.length === 0}\n      onClick={() => {\n        dispatch(redo());\n      }}\n    >\n      Redo\n    </Button>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  future: state.future,\n});\n\nexport default connect(mapStateToProps, null)(UndoButton);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport Canvas from \"./components/Canvas\";\nimport UndoButton from \"./components/UndoButton\";\nimport RedoButton from \"./components/RedoButton\";\nimport { OP_SET_TYPE } from \"./redux/actionTypes\";\nimport { OP_TYPE_RECT, OP_TYPE_GESTURE } from \"./constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(12),\n    paddingBottom: theme.spacing(8),\n  },\n  canvas: {\n    height: \"70vh\",\n  },\n}));\n\nfunction App({ history, type, dispatch }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Redux Paint\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color={type === OP_TYPE_GESTURE ? \"secondary\" : \"default\"}\n            className={classes.menuButton}\n            onClick={() => dispatch({type: OP_SET_TYPE, payload: { type: OP_TYPE_GESTURE }})}\n          >\n            Gesture\n          </Button>\n          <Button\n            variant=\"contained\"\n            color={type === OP_TYPE_RECT ? \"secondary\" : \"default\"}\n            className={classes.menuButton}\n            onClick={() => dispatch({type: OP_SET_TYPE, payload: { type: OP_TYPE_RECT }})}\n          >\n            Rect\n          </Button>\n          <UndoButton className={classes.menuButton} />\n          <RedoButton className={classes.menuButton} />\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <Container className={classes.container}>\n          <Card className={classes.canvas} raised={true}>\n            <Canvas />\n          </Card>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, null)(App);\n","import { OP_CREATE, OP_UPDATE, UNDO, REDO, OP_SET_TYPE } from \"./actionTypes\";\nimport { OP_TYPE_DEFAULT, OP_STROKE_STYLE_DEFAULT } from \"./../constants\";\n\nfunction reduce(\n  state = {\n    type: OP_TYPE_DEFAULT,\n    strokeStyle: OP_STROKE_STYLE_DEFAULT,\n    history: [],\n    future: [],\n  },\n  action\n) {\n  switch (action.type) {\n    case OP_SET_TYPE:\n      return {\n        ...state,\n        type: action.payload.type,\n      };\n    case OP_CREATE:\n      return {\n        ...state,\n        future: [],\n        history: state.history.concat([[action.payload]]),\n      };\n    case OP_UPDATE:\n      var [last, ...rest] = state.history.slice().reverse();\n      return {\n        ...state,\n        future: [],\n        history: [...rest.slice().reverse(), last.concat([action.payload])],\n      };\n    case UNDO:\n      return {\n        ...state,\n        future: state.future.concat(state.history.slice(-1)),\n        history: state.history.slice(0, -1),\n      };\n    case REDO:\n      return {\n        ...state,\n        future: state.future.slice(0, -1),\n        history: state.history.slice().concat(state.future.slice(-1)),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reduce;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reduce from \"./opReducer\";\n\nconst store = configureStore({ reducer: reduce });\n\n// store.subscribe(() => console.log(store.getState()));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}