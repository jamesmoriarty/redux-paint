{"version":3,"sources":["types/index.ts","components/Canvas.tsx","components/Canvas/resize.ts","components/Canvas/render.ts","containers/Canvas.ts","components/ColorPicker.js","containers/ColorPicker.ts","App.tsx","containers/App.ts","reducer.ts","store.ts","index.js"],"names":["OP_TYPES","ACTION_TYPES","OP_TYPE_DEFAULT","OP_TYPE_GESTURE","Canvas","history","onEvent","type","color","useState","mouseDown","state","setState","handleEvent","event","refCanvas","current","x","pageX","offsetLeft","y","pageY","offsetTop","useRef","useEffect","parentNode","width","parseInt","getComputedStyle","getPropertyValue","height","handleResize","ctx","getContext","op","points","x1","y1","strokeStyle","fillStyle","OP_TYPE_RECT","length","x2","y2","beginPath","fillRect","stroke","moveTo","lineTo","Error","handleRender","ref","onMouseUp","onMouseMove","onMouseDown","connect","dispatch","opType","eventType","OP_CREATE","payload","OP_UPDATE","ColorPicker","children","onChangeComplete","displayColorPicker","React","cloneElement","onClick","style","marginTop","position","zIndex","top","right","bottom","left","OP_SET_COLOR","hex","useStyles","makeStyles","theme","title","flexGrow","toolButtonGroup","marginRight","spacing","content","overflow","container","paddingTop","paddingBottom","canvas","App","future","onGesture","onRect","onUndo","onRedo","classes","AppBar","Toolbar","Typography","variant","className","ButtonGroup","Button","disabled","Container","Card","raised","OP_SET_TYPE","UNDO","REDO","reduce","action","concat","slice","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAiBYA,E,qNAAAA,O,qCAAAA,I,gCAAAA,M,KAKL,IAsBKC,EAtBCC,EAAkBF,EAASG,iB,SAsB5BF,O,6BAAAA,I,+BAAAA,I,yBAAAA,I,yBAAAA,I,eAAAA,I,gBAAAA,M,yBCEGG,MA1Cf,YAAyD,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAc,EAC5BC,mBAAS,CAAEC,WAAW,IADM,mBAC/CC,EAD+C,KACxCC,EADwC,KAEpDC,EAAc,SAACC,GACb,GAAyB,MAArBC,EAAUC,QAAd,CAEA,IAAMC,EAAIH,EAAMI,MAAQH,EAAUC,QAAQG,WACxCC,EAAIN,EAAMO,MAAQN,EAAUC,QAAQM,UAEtC,OAAQR,EAAMP,MACZ,IAAK,YAEH,OADAK,EAAS,CAAEF,WAAW,IACfJ,EAAQC,EAAMC,EAAOM,EAAMP,KAAMU,EAAGG,GAC7C,IAAK,YACH,GAAIT,EAAMD,UAAW,OAAOJ,EAAQC,EAAMC,EAAOM,EAAMP,KAAMU,EAAGG,GAChE,MACF,IAAK,UACH,OAAOR,EAAS,CAAEF,WAAW,OAMjCK,EAAYQ,iBAA0B,MAU1C,OARAC,qBAAU,YC5BgB,SAACT,GAC3B,GAAyB,MAArBA,EAAUC,QAAd,CAEA,IAAMS,EAAaV,EAAUC,QAAQS,WAErCV,EAAUC,QAAQU,MAAQC,SACxBC,iBAAiBH,GAAYI,iBAAiB,UAEhDd,EAAUC,QAAQc,OAASH,SACzBC,iBAAiBH,GAAYI,iBAAiB,YDoB9CE,CAAahB,MAGfS,qBAAU,YE9BgB,SAC1BT,EACAV,GAEA,GAAyB,MAArBU,EAAUC,QAAd,CAGAD,EAAUC,QAAQU,MAAQX,EAAUC,QAAQU,MAE5C,IAAMM,EAAMjB,EAAUC,QAAQiB,WAAW,MAEzC,GAAW,MAAPD,EAAJ,CARG,oBAUc3B,GAVd,IAUH,2BAA0B,CAAC,IAAhB6B,EAAe,QAChB3B,EAAwB2B,EAAxB3B,KAAMC,EAAkB0B,EAAlB1B,MAAO2B,EAAWD,EAAXC,OACnBC,EAAKD,EAAO,GAAGlB,EACfoB,EAAKF,EAAO,GAAGf,EAKjB,OAHAY,EAAIM,YAAc9B,EAClBwB,EAAIO,UAAY/B,EAERD,GACN,KAAKP,EAASwC,aAAd,MAE2BN,EAAGC,OAAOD,EAAGC,OAAOM,OAAS,GAA3CC,EAFb,EAEUzB,EAAU0B,EAFpB,EAEiBvB,EACfY,EAAIY,YACJZ,EAAIa,SAAST,EAAIC,GAAiB,GAAZD,EAAKM,IAAuB,GAAZL,EAAKM,IAC3CX,EAAIc,SACJ,MACF,KAAK9C,EAASG,gBACZ6B,EAAIY,YACJZ,EAAIe,OAAOX,EAAIC,GAFjB,oBAGiCH,EAAGC,QAHpC,IAGE,2BAA0C,CAAC,IAAD,UAA1BO,EAA0B,EAA7BzB,EAAU0B,EAAmB,EAAtBvB,EAClBY,EAAIgB,OAAON,EAAIC,GACfX,EAAIc,UALR,8BAOE,MACF,QACE,MAAM,IAAIG,MAAM,eAAiB1C,KAnCpC,iCF4BD2C,CAAanC,EAAWV,MAIxB,4BACE8C,IAAKpC,EACLqC,UAAWvC,EACXwC,YAAaxC,EACbyC,YAAazC,KGKJ0C,eA1CS,SAAC5C,GAAD,OAAkBA,KAEf,SAAC6C,GAC1B,MAAO,CACLlD,QAAS,SACPmD,EACAjD,EACAkD,EACAzC,EACAG,GAEA,OAAQqC,GACN,KAAKzD,EAASwC,aACd,KAAKxC,EAASG,gBACZ,OAAQuD,GACN,IAAK,YACH,OAAOF,EAAS,CACdjD,KAAMN,EAAa0D,UACnBC,QAAS,CACPrD,KAAMkD,EACNjD,MAAOA,EACP2B,OAAQ,CAAC,CAAElB,IAAGG,SAGpB,IAAK,YACH,OAAOoC,EAAS,CACdjD,KAAMN,EAAa4D,UACnBD,QAAS,CACP3C,IACAG,OAGN,QACE,MAAM,IAAI6B,MAAM,sBAEtB,QACE,MAAM,IAAIA,MAAM,oBAAsBQ,QAMjCF,CAA6CnD,G,SCN7C0D,MArCf,YAA6D,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,iBAAkBxD,EAAS,EAATA,MAAS,EAChCC,mBAAS,CAAEwD,oBAAoB,IADC,mBACnDtD,EADmD,KAC5CC,EAD4C,KAwB1D,OACE,6BACGsD,IAAMC,aAAaJ,EAAU,CAAEK,QArBpB,WACZxD,EAAS,CAAEqD,oBAAqBtD,EAAMsD,wBAqBrCtD,EAAMsD,mBACL,yBAAKI,MAjBC,CACRC,UAAW,MACXC,SAAU,WACVC,OAAQ,MAeJ,yBAAKH,MAbH,CACNE,SAAU,QACVE,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAQiBR,QA3BX,WACZxD,EAAS,CAAEqD,oBAAoB,OA2B3B,kBAAC,eAAD,CAAczD,MAAOA,EAAOwD,iBAtBX,SAACxD,GACtBwD,EAAiBxD,OAuBb,OClBK+C,eAbS,SAAC5C,GAAD,OAAkBA,KAEf,SAAC6C,GAC1B,MAAO,CACLQ,iBAAkB,SAACxD,GACjBgD,EAAS,CACPjD,KAAMN,EAAa4E,aACnBjB,QAAS,CAAEpD,MAAOA,EAAMsE,WAMjBvB,CAA6CO,GCCtDiB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,GAEZC,gBAAiB,CACfC,YAAaJ,EAAMK,QAAQ,IAE7BC,QAAS,CACPJ,SAAU,EACVrD,OAAQ,QACR0D,SAAU,QAEZC,UAAW,CACTC,WAAYT,EAAMK,QAAQ,GAC1BK,cAAeV,EAAMK,QAAQ,IAE/BM,OAAQ,CACN9D,OAAQ,YA6EG+D,MAzEf,YASS,IARPxF,EAQM,EARNA,QACAyF,EAOM,EAPNA,OACAvF,EAMM,EANNA,KACAC,EAKM,EALNA,MACAuF,EAIM,EAJNA,UACAC,EAGM,EAHNA,OACAC,EAEM,EAFNA,OACAC,EACM,EADNA,OAEMC,EAAUpB,IAEhB,OACE,6BACE,kBAACqB,EAAA,EAAD,CAAQ7B,SAAS,YACf,kBAAC8B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWL,EAAQjB,OAA5C,eAGA,kBAACuB,EAAA,EAAD,CAAaD,UAAWL,EAAQf,iBAC9B,kBAAC,EAAD,KACE,kBAACsB,EAAA,EAAD,CAAQH,QAAQ,aACd,kBAAC,IAAD,CAAWlC,MAAO,CAAE7D,MAAOA,QAIjC,kBAACiG,EAAA,EAAD,CAAaD,UAAWL,EAAQf,iBAC9B,kBAACsB,EAAA,EAAD,CACEH,QAAQ,YACR/F,MACED,IAASP,EAASG,gBAAkB,YAAc,UAEpDiE,QAAS2B,GAET,kBAAC,IAAD,OAEF,kBAACW,EAAA,EAAD,CACEH,QAAQ,YACR/F,MAAOD,IAASP,EAASwC,aAAe,YAAc,UACtD4B,QAAS4B,GAET,kBAAC,IAAD,QAGJ,kBAACS,EAAA,EAAD,CAAaD,UAAWL,EAAQf,iBAC9B,kBAACsB,EAAA,EAAD,CACEH,QAAQ,YACRI,SAA6B,IAAnBtG,EAAQoC,OAClB2B,QAAS6B,GAET,kBAAC,IAAD,OAEF,kBAACS,EAAA,EAAD,CACEH,QAAQ,YACRI,SAA4B,IAAlBb,EAAOrD,OACjB2B,QAAS8B,GAET,kBAAC,IAAD,UAKR,0BAAMM,UAAWL,EAAQZ,SACvB,kBAACqB,EAAA,EAAD,CAAWJ,UAAWL,EAAQV,WAC5B,kBAACoB,EAAA,EAAD,CAAML,UAAWL,EAAQP,OAAQkB,QAAQ,GACvC,kBAAC,EAAD,WC3EGvD,eAzBS,SAAC5C,GAAD,OAAkBA,KAEf,SAAC6C,GAC1B,MAAO,CACLuC,UAAW,WACTvC,EAAS,CACPjD,KAAMN,EAAa8G,YACnBnD,QAAS,CAAErD,KAAMP,EAASG,oBAG9B6F,OAAQ,WACNxC,EAAS,CACPjD,KAAMN,EAAa8G,YACnBnD,QAAS,CAAErD,KAAMP,EAASwC,iBAG9ByD,OAAQ,WACNzC,EAAS,CAAEjD,KAAMN,EAAa+G,KAAMpD,QAAS,MAE/CsC,OAAQ,WACN1C,EAAS,CAAEjD,KAAMN,EAAagH,KAAMrD,QAAS,SAKpCL,CAA6CsC,G,iBCqC7CqB,MA1Df,WAQG,IAPDvG,EAOA,uDAPe,CACbJ,KAAML,EACNM,MTYmC,OSXnCH,QAAS,GACTyF,OAAQ,IAEVqB,EACA,uCACA,OAAQA,EAAO5G,MACb,KAAKN,EAAa8G,YAChB,OAAO,2BACFpG,GADL,IAEEJ,KAAM4G,EAAOvD,QAAQrD,OAEzB,KAAKN,EAAa4E,aAChB,OAAO,2BACFlE,GADL,IAEEH,MAAO2G,EAAOvD,QAAQpD,QAE1B,KAAKP,EAAa0D,UAChB,OAAO,2BACFhD,GADL,IAEEmF,OAAQ,GACRzF,QAASM,EAAMN,QAAQ+G,OAAO,CAACD,EAAOvD,YAE1C,KAAK3D,EAAa4D,UAAlB,MACkClD,EAAMN,QAAQgH,OAAO,GAAG,GAAhD9G,EADV,EACUA,KAAMC,EADhB,EACgBA,MAAO2B,EADvB,EACuBA,OADvB,EAEegF,EAAOvD,QAAhB3C,EAFN,EAEMA,EAAGG,EAFT,EAESA,EAEP,OAAO,2BACFT,GADL,IAEEmF,OAAQ,GACRzF,QAASM,EAAMN,QAAQgH,MAAM,GAAI,GAAGD,OAAO,CACzC,CACE7G,OACAC,QACA2B,OAAQA,EAAOiF,OAAO,CAAC,CAAEnG,IAAGG,YAIpC,KAAKnB,EAAa+G,KAChB,OAAO,2BACFrG,GADL,IAEEmF,OAAQnF,EAAMmF,OAAOsB,OAAOzG,EAAMN,QAAQgH,OAAO,IACjDhH,QAASM,EAAMN,QAAQgH,MAAM,GAAI,KAErC,KAAKpH,EAAagH,KAChB,OAAO,2BACFtG,GADL,IAEEmF,OAAQnF,EAAMmF,OAAOuB,MAAM,GAAI,GAC/BhH,QAASM,EAAMN,QAAQgH,QAAQD,OAAOzG,EAAMmF,OAAOuB,OAAO,MAE9D,QACE,OAAO1G,ICvDE2G,EAJDC,YAAe,CAAEC,QAASN,ICGxCO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.f9e99489.chunk.js","sourcesContent":["export interface State {\n  type: OP_TYPES;\n  color: string;\n  history: Op[];\n  future: Op[];\n}\n\nexport type Action =\n  | UndoAction\n  | RedoAction\n  | OpSetTypeAction\n  | OpSetColorAction\n  | OpCreateAction\n  | OpUpdateAction;\n\nexport type Dispatch = (action: Action) => void;\n\nexport enum OP_TYPES {\n  OP_TYPE_GESTURE,\n  OP_TYPE_RECT,\n}\n\nexport const OP_TYPE_DEFAULT = OP_TYPES.OP_TYPE_GESTURE;\nexport const OP_STROKE_STYLE_DEFAULT = \"#333\";\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n\nexport type Op = {\n  type: OP_TYPES;\n  color: string;\n  points: Point[];\n};\n\nexport type OpCreatePayload = {\n  type: OP_TYPES;\n  color: string;\n  points: Point[];\n};\n\nexport type OpUpdatePayload = Point;\n\nexport enum ACTION_TYPES {\n  OP_SET_TYPE,\n  OP_SET_COLOR,\n  OP_CREATE,\n  OP_UPDATE,\n  UNDO,\n  REDO,\n}\n\nexport type UndoAction = {\n  type: ACTION_TYPES.UNDO;\n  payload: {};\n};\n\nexport type RedoAction = {\n  type: ACTION_TYPES.REDO;\n  payload: {};\n};\n\nexport type OpSetTypeAction = {\n  type: ACTION_TYPES.OP_SET_TYPE;\n  payload: {\n    type: OP_TYPES;\n  };\n};\n\nexport type OpSetColorAction = {\n  type: ACTION_TYPES.OP_SET_COLOR;\n  payload: {\n    color: string;\n  };\n};\n\nexport type OpCreateAction = {\n  type: ACTION_TYPES.OP_CREATE;\n  payload: OpCreatePayload;\n};\n\nexport type OpUpdateAction = {\n  type: ACTION_TYPES.OP_UPDATE;\n  payload: OpUpdatePayload;\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { handleRender } from \"./Canvas/render\";\nimport { handleResize } from \"./Canvas/resize\";\n\nfunction Canvas({ history, onEvent, type, color }: any) {\n  const [state, setState] = useState({ mouseDown: false }),\n    handleEvent = (event: any) => {\n      if (refCanvas.current == null) return;\n\n      const x = event.pageX - refCanvas.current.offsetLeft,\n        y = event.pageY - refCanvas.current.offsetTop;\n\n      switch (event.type) {\n        case \"mousedown\":\n          setState({ mouseDown: true });\n          return onEvent(type, color, event.type, x, y);\n        case \"mousemove\":\n          if (state.mouseDown) return onEvent(type, color, event.type, x, y);\n          break;\n        case \"mouseup\":\n          return setState({ mouseDown: false });\n        default:\n          break;\n      }\n    };\n\n  let refCanvas = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    handleResize(refCanvas);\n  });\n\n  useEffect(() => {\n    handleRender(refCanvas, history);\n  });\n\n  return (\n    <canvas\n      ref={refCanvas}\n      onMouseUp={handleEvent}\n      onMouseMove={handleEvent}\n      onMouseDown={handleEvent}\n    ></canvas>\n  );\n}\n\nexport default Canvas;\n","export const handleResize = (refCanvas: React.RefObject<HTMLCanvasElement>) => {\n  if (refCanvas.current == null) return;\n\n  const parentNode = refCanvas.current.parentNode as HTMLDivElement;\n\n  refCanvas.current.width = parseInt(\n    getComputedStyle(parentNode).getPropertyValue(\"width\")\n  );\n  refCanvas.current.height = parseInt(\n    getComputedStyle(parentNode).getPropertyValue(\"height\")\n  );\n};\n","import { Op, OP_TYPES } from \"../../types\";\n\nexport const handleRender = (\n  refCanvas: React.RefObject<HTMLCanvasElement>,\n  history: Op[]\n) => {\n  if (refCanvas.current == null) return;\n\n  // eslint-disable-next-line\n  refCanvas.current.width = refCanvas.current.width;\n\n  const ctx = refCanvas.current.getContext(\"2d\");\n\n  if (ctx == null) return;\n\n  for (const op of history) {\n    const { type, color, points } = op,\n      x1 = points[0].x,\n      y1 = points[0].y;\n\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n\n    switch (type) {\n      case OP_TYPES.OP_TYPE_RECT:\n        // eslint-disable-next-line\n        const { x: x2, y: y2 } = op.points[op.points.length - 1];\n        ctx.beginPath();\n        ctx.fillRect(x1, y1, (x1 - x2) * -1, (y1 - y2) * -1);\n        ctx.stroke();\n        break;\n      case OP_TYPES.OP_TYPE_GESTURE:\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        for (const { x: x2, y: y2 } of op.points) {\n          ctx.lineTo(x2, y2);\n          ctx.stroke();\n        }\n        break;\n      default:\n        throw new Error(\"unknown op: \" + type);\n    }\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ACTION_TYPES, OP_TYPES, State, Dispatch } from \"../types\";\nimport Canvas from \"../components/Canvas\";\n\nconst mapStateToProps = (state: State) => state;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    onEvent: (\n      opType: OP_TYPES,\n      color: string,\n      eventType: string,\n      x: number,\n      y: number\n    ) => {\n      switch (opType) {\n        case OP_TYPES.OP_TYPE_RECT:\n        case OP_TYPES.OP_TYPE_GESTURE:\n          switch (eventType) {\n            case \"mousedown\":\n              return dispatch({\n                type: ACTION_TYPES.OP_CREATE,\n                payload: {\n                  type: opType,\n                  color: color,\n                  points: [{ x, y }],\n                },\n              });\n            case \"mousemove\":\n              return dispatch({\n                type: ACTION_TYPES.OP_UPDATE,\n                payload: {\n                  x,\n                  y,\n                },\n              });\n            default:\n              throw new Error(\"unknown event.type\");\n          }\n        default:\n          throw new Error(\"unknown op.type: \" + opType);\n      }\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\n","import React, { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nfunction ColorPicker({ children, onChangeComplete, color }) {\n  const [state, setState] = useState({ displayColorPicker: false }),\n    handleClose = () => {\n      setState({ displayColorPicker: false });\n    },\n    handleClick = () => {\n      setState({ displayColorPicker: !state.displayColorPicker });\n    },\n    handleChangeComplete = (color) => {\n      onChangeComplete(color);\n    },\n    popover = {\n      marginTop: \"5vh\",\n      position: \"absolute\",\n      zIndex: \"2\",\n    },\n    cover = {\n      position: \"fixed\",\n      top: \"0px\",\n      right: \"0px\",\n      bottom: \"0px\",\n      left: \"0px\",\n    };\n\n  return (\n    <div>\n      {React.cloneElement(children, { onClick: handleClick })}\n      {state.displayColorPicker ? (\n        <div style={popover}>\n          <div style={cover} onClick={handleClose} />\n          <ChromePicker color={color} onChangeComplete={handleChangeComplete} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ColorPicker;\n","import { connect } from \"react-redux\";\nimport { ACTION_TYPES, State, Dispatch } from \"../types\";\nimport ColorPicker from \"../components/ColorPicker\";\n\nconst mapStateToProps = (state: State) => state;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    onChangeComplete: (color: any) => {\n      dispatch({\n        type: ACTION_TYPES.OP_SET_COLOR,\n        payload: { color: color.hex },\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport GestureIcon from \"@material-ui/icons/Gesture\";\nimport RectIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Canvas from \"./containers/Canvas\";\nimport ColorPicker from \"./containers/ColorPicker\";\nimport { OP_TYPES } from \"./types\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  toolButtonGroup: {\n    marginRight: theme.spacing(1),\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  canvas: {\n    height: \"70vh\",\n  },\n}));\n\nfunction App({\n  history,\n  future,\n  type,\n  color,\n  onGesture,\n  onRect,\n  onUndo,\n  onRedo,\n}: any) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Redux Paint\n          </Typography>\n          <ButtonGroup className={classes.toolButtonGroup}>\n            <ColorPicker>\n              <Button variant=\"contained\">\n                <ColorIcon style={{ color: color }} />\n              </Button>\n            </ColorPicker>\n          </ButtonGroup>\n          <ButtonGroup className={classes.toolButtonGroup}>\n            <Button\n              variant=\"contained\"\n              color={\n                type === OP_TYPES.OP_TYPE_GESTURE ? \"secondary\" : \"default\"\n              }\n              onClick={onGesture}\n            >\n              <GestureIcon />\n            </Button>\n            <Button\n              variant=\"contained\"\n              color={type === OP_TYPES.OP_TYPE_RECT ? \"secondary\" : \"default\"}\n              onClick={onRect}\n            >\n              <RectIcon />\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup className={classes.toolButtonGroup}>\n            <Button\n              variant=\"contained\"\n              disabled={history.length === 0}\n              onClick={onUndo}\n            >\n              <UndoIcon />\n            </Button>\n            <Button\n              variant=\"contained\"\n              disabled={future.length === 0}\n              onClick={onRedo}\n            >\n              <RedoIcon />\n            </Button>\n          </ButtonGroup>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <Container className={classes.container}>\n          <Card className={classes.canvas} raised={true}>\n            <Canvas />\n          </Card>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import App from \"../App\";\nimport { ACTION_TYPES, OP_TYPES, State, Dispatch } from \"../types\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state: State) => state;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    onGesture: () => {\n      dispatch({\n        type: ACTION_TYPES.OP_SET_TYPE,\n        payload: { type: OP_TYPES.OP_TYPE_GESTURE },\n      });\n    },\n    onRect: () => {\n      dispatch({\n        type: ACTION_TYPES.OP_SET_TYPE,\n        payload: { type: OP_TYPES.OP_TYPE_RECT },\n      });\n    },\n    onUndo: () => {\n      dispatch({ type: ACTION_TYPES.UNDO, payload: {} });\n    },\n    onRedo: () => {\n      dispatch({ type: ACTION_TYPES.REDO, payload: {} });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  State,\n  Action,\n  ACTION_TYPES,\n  OP_TYPE_DEFAULT,\n  OP_STROKE_STYLE_DEFAULT,\n} from \"./types\";\n\nfunction reduce(\n  state: State = {\n    type: OP_TYPE_DEFAULT,\n    color: OP_STROKE_STYLE_DEFAULT,\n    history: [],\n    future: [],\n  },\n  action: Action\n) {\n  switch (action.type) {\n    case ACTION_TYPES.OP_SET_TYPE:\n      return {\n        ...state,\n        type: action.payload.type,\n      };\n    case ACTION_TYPES.OP_SET_COLOR:\n      return {\n        ...state,\n        color: action.payload.color,\n      };\n    case ACTION_TYPES.OP_CREATE:\n      return {\n        ...state,\n        future: [],\n        history: state.history.concat([action.payload]),\n      };\n    case ACTION_TYPES.OP_UPDATE:\n      const { type, color, points } = state.history.slice(-1)[0],\n        { x, y } = action.payload;\n\n      return {\n        ...state,\n        future: [],\n        history: state.history.slice(0, -1).concat([\n          {\n            type,\n            color,\n            points: points.concat([{ x, y }]),\n          },\n        ]),\n      };\n    case ACTION_TYPES.UNDO:\n      return {\n        ...state,\n        future: state.future.concat(state.history.slice(-1)),\n        history: state.history.slice(0, -1),\n      };\n    case ACTION_TYPES.REDO:\n      return {\n        ...state,\n        future: state.future.slice(0, -1),\n        history: state.history.slice().concat(state.future.slice(-1)),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reduce;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reduce from \"./reducer\";\n\nconst store = configureStore({ reducer: reduce });\n\n// store.subscribe(() => console.log(store.getState()));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}