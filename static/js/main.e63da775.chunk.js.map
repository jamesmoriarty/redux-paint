{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","components/Canvas.js","constants.js","render.js","components/ColorPicker.js","App.js","redux/opReducer.js","redux/store.js","index.js"],"names":["opSetType","type","payload","connect","state","history","dispatch","strokeStyle","useState","mouseDown","setState","handleEvent","event","x","y","opCreate","pageX","refCanvas","current","offsetLeft","pageY","offsetTop","Error","handleEventAs","useRef","useEffect","width","parseInt","getComputedStyle","parentNode","getPropertyValue","height","resize","ctx","getContext","op","x1","y1","fillStyle","slice","reverse","x2","y2","beginPath","fillRect","stroke","moveTo","lineTo","render","ref","onMouseUp","onMouseMove","onMouseDown","children","displayColorPicker","React","cloneElement","onClick","style","marginTop","position","zIndex","top","right","bottom","left","color","onChangeComplete","opSetColor","hex","useStyles","makeStyles","theme","title","flexGrow","toolButtonGroup","marginRight","spacing","content","overflow","container","paddingTop","paddingBottom","canvas","future","classes","AppBar","Toolbar","Typography","variant","className","ButtonGroup","Button","disabled","length","Container","Card","raised","reduce","action","concat","last","rest","store","configureStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e63da775.chunk.js","sourcesContent":["import { OP_CREATE, OP_UPDATE, UNDO, REDO, OP_SET_TYPE, OP_SET_COLOR } from \"./actionTypes\";\n\nexport const opSetType = (type) => ({\n  type: OP_SET_TYPE,\n  payload: { type },\n});\n\nexport const opSetColor = (color) => ({\n  type: OP_SET_COLOR,\n  payload: { color },\n});\n\nexport const opCreate = (type, strokeStyle, x, y) => ({\n  type: OP_CREATE,\n  payload: { type, strokeStyle, x, y },\n});\n\nexport const opUpdate = (x, y) => ({\n  type: OP_UPDATE,\n  payload: { x, y },\n});\n\nexport const undo = () => ({\n  type: UNDO,\n  payload: {},\n});\n\nexport const redo = () => ({\n  type: REDO,\n  payload: {},\n});\n","export const OP_SET_TYPE = \"op/opSetType\";\nexport const OP_SET_COLOR = \"op/opSetColor\";\nexport const OP_CREATE = \"op/create\";\nexport const OP_UPDATE = \"op/update\";\nexport const UNDO = \"undo\";\nexport const REDO = \"redo\";\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { opCreate, opUpdate } from \"./../redux/actions\";\nimport { render } from \"./../render\";\nimport { OP_TYPE_RECT, OP_TYPE_GESTURE } from \"./../constants\";\n\nfunction resize(refCanvas) {\n  refCanvas.current.width = parseInt(\n    getComputedStyle(refCanvas.current.parentNode).getPropertyValue(\"width\")\n  );\n  refCanvas.current.height = parseInt(\n    getComputedStyle(refCanvas.current.parentNode).getPropertyValue(\"height\")\n  );\n}\n\nfunction Canvas({ history, dispatch, type, strokeStyle }) {\n  const [state, setState] = useState({ mouseDown: false }),\n    handleEventAs = (type, strokeStyle, event) => {\n      switch (event.type) {\n        case \"mousedown\":\n          setState({ mouseDown: true });\n\n          return dispatch(\n            opCreate(\n              type,\n              strokeStyle,\n              event.pageX - refCanvas.current.offsetLeft,\n              event.pageY - refCanvas.current.offsetTop\n            )\n          );\n        case \"mousemove\":\n          if (state.mouseDown) {\n            return dispatch(\n              opUpdate(\n                event.pageX - refCanvas.current.offsetLeft,\n                event.pageY - refCanvas.current.offsetTop\n              )\n            );\n          }\n          return;\n        case \"mouseup\":\n          return setState({ mouseDown: false });\n        default:\n          throw new Error(\"unknown event.type: \", event.type);\n      }\n    },\n    handleEvent = (event) => {\n      switch (type) {\n        case OP_TYPE_RECT:\n        case OP_TYPE_GESTURE:\n          return handleEventAs(type, strokeStyle, event);\n        default:\n          throw new Error(\"unknown op.type: \", type);\n      }\n    };\n\n  let refCanvas = useRef(null);\n\n  useEffect(() => {\n    resize(refCanvas);\n  });\n\n  useEffect(() => {\n    render(refCanvas, history);\n  });\n\n  return (\n    <canvas\n      ref={refCanvas}\n      onMouseUp={handleEvent}\n      onMouseMove={handleEvent}\n      onMouseDown={handleEvent}\n    ></canvas>\n  );\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, null)(Canvas);\n","export const OP_TYPE_GESTURE = \"gesture\";\nexport const OP_TYPE_RECT = \"rect\";\nexport const OP_TYPE_DEFAULT = OP_TYPE_GESTURE;\nexport const OP_STROKE_STYLE_DEFAULT = \"#333\";\n","import { OP_TYPE_RECT, OP_TYPE_GESTURE } from \"./constants\";\n\nexport const render = (refCanvas, history) => {\n  // eslint-disable-next-line\n  refCanvas.current.width = refCanvas.current.width;\n\n  const ctx = refCanvas.current.getContext(\"2d\");\n\n  for (const op of history) {\n    const { type, strokeStyle, x: x1, y: y1 } = op[0];\n\n    ctx.strokeStyle = strokeStyle;\n    ctx.fillStyle = strokeStyle;\n\n    switch (type) {\n      case OP_TYPE_RECT:\n        // eslint-disable-next-line\n        const [{ x: x2, y: y2 }, ...rest] = op.slice().reverse();\n        ctx.beginPath();\n        ctx.fillRect(x1, y1, (x1 - x2) * -1, (y1 - y2) * -1);\n        ctx.stroke();\n        break;\n      case OP_TYPE_GESTURE:\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        for (const { x: x2, y: y2 } of op) {\n          ctx.lineTo(x2, y2);\n          ctx.stroke();\n        }\n        break;\n      default:\n        throw new Error(\"unknown op: \", op);\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ChromePicker } from \"react-color\";\nimport { opSetColor} from \"./../redux/actions\";\n\nfunction ColorPicker({ children, dispatch, strokeStyle }) {\n  const [state, setState] = useState({ displayColorPicker: false }),\n    handleClose = () => {\n      setState({ displayColorPicker: false });\n    },\n    handleClick = () => {\n      setState({ displayColorPicker: !state.displayColorPicker });\n    },\n    handleChangeComplete = (color) => {\n        dispatch(opSetColor(color.hex));\n    },\n    popover = {\n      marginTop: \"5vh\",\n      position: \"absolute\",\n      zIndex: \"2\",\n    },\n    cover = {\n      position: \"fixed\",\n      top: \"0px\",\n      right: \"0px\",\n      bottom: \"0px\",\n      left: \"0px\",\n    };\n\n  return (\n    <div>\n      {React.cloneElement(children, { onClick: handleClick })}\n      {state.displayColorPicker ? (\n        <div style={popover}>\n          <div style={cover} onClick={handleClose} />\n          <ChromePicker\n            color={strokeStyle}\n            onChangeComplete={handleChangeComplete}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, null)(ColorPicker);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport GestureIcon from \"@material-ui/icons/Gesture\";\nimport LineIcon from \"@material-ui/icons/Remove\";\nimport RectIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Canvas from \"./components/Canvas\";\nimport ColorPicker from \"./components/ColorPicker\";\nimport { OP_TYPE_RECT, OP_TYPE_GESTURE } from \"./constants\";\nimport { opSetType, redo, undo } from \"./redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  toolButtonGroup: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(12),\n    paddingBottom: theme.spacing(8),\n  },\n  canvas: {\n    height: \"70vh\",\n  },\n}));\n\nfunction App({ history, future, type, dispatch, strokeStyle }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Redux Paint\n          </Typography>\n          <ButtonGroup className={classes.toolButtonGroup}>\n            <ColorPicker>\n              <Button variant=\"contained\">\n                <ColorIcon style={{ color: strokeStyle }} />\n              </Button>\n            </ColorPicker>\n          </ButtonGroup>\n          <ButtonGroup className={classes.toolButtonGroup}>\n            <Button\n              variant=\"contained\"\n              color={type === OP_TYPE_GESTURE ? \"secondary\" : \"default\"}\n              onClick={() => dispatch(opSetType(OP_TYPE_GESTURE))}\n            >\n              <GestureIcon />\n            </Button>\n            <Button variant=\"contained\" disabled={true}>\n              <LineIcon />\n            </Button>\n            <Button\n              variant=\"contained\"\n              color={type === OP_TYPE_RECT ? \"secondary\" : \"default\"}\n              onClick={() => dispatch(opSetType(OP_TYPE_RECT))}\n            >\n              <RectIcon />\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup className={classes.toolButtonGroup}>\n            <Button\n              variant=\"contained\"\n              disabled={history.length === 0}\n              onClick={() => {\n                dispatch(undo());\n              }}\n            >\n              <UndoIcon />\n            </Button>\n            <Button\n              variant=\"contained\"\n              disabled={future.length === 0}\n              onClick={() => {\n                dispatch(redo());\n              }}\n            >\n              <RedoIcon />\n            </Button>\n          </ButtonGroup>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <Container className={classes.container}>\n          <Card className={classes.canvas} raised={true}>\n            <Canvas />\n          </Card>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, null)(App);\n","import { OP_CREATE, OP_UPDATE, UNDO, REDO, OP_SET_TYPE, OP_SET_COLOR } from \"./actionTypes\";\nimport { OP_TYPE_DEFAULT, OP_STROKE_STYLE_DEFAULT } from \"./../constants\";\n\nfunction reduce(\n  state = {\n    type: OP_TYPE_DEFAULT,\n    strokeStyle: OP_STROKE_STYLE_DEFAULT,\n    history: [],\n    future: [],\n  },\n  action\n) {\n  switch (action.type) {\n    case OP_SET_TYPE:\n      return {\n        ...state,\n        type: action.payload.type,\n      };\n    case OP_SET_COLOR:\n      return {\n        ...state,\n        strokeStyle: action.payload.color,\n      };\n    case OP_CREATE:\n      return {\n        ...state,\n        future: [],\n        history: state.history.concat([[action.payload]]),\n      };\n    case OP_UPDATE:\n      var [last, ...rest] = state.history.slice().reverse();\n      return {\n        ...state,\n        future: [],\n        history: [...rest.slice().reverse(), last.concat([action.payload])],\n      };\n    case UNDO:\n      return {\n        ...state,\n        future: state.future.concat(state.history.slice(-1)),\n        history: state.history.slice(0, -1),\n      };\n    case REDO:\n      return {\n        ...state,\n        future: state.future.slice(0, -1),\n        history: state.history.slice().concat(state.future.slice(-1)),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reduce;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reduce from \"./opReducer\";\n\nconst store = configureStore({ reducer: reduce });\n\n// store.subscribe(() => console.log(store.getState()));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}